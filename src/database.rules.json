
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check user role
    function getRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }

    // Helper function to check if user is an admin or manager
    function isStaff(uid) {
      let role = getRole(uid);
      return role == 'admin' || role == 'manager';
    }
    
    function isEmployee(uid) {
      let role = getRole(uid);
      return role == 'employee-a' || role == 'employee-b' || isStaff(uid);
    }
    
    // Users Collection
    match /users/{userId} {
      // Any authenticated user can create their own user document (on sign up)
      allow create: if request.auth != null && request.auth.uid == userId;
      // Users can read/update their own data. Staff can update any user.
      allow read, update: if request.auth != null && (request.auth.uid == userId || isStaff(request.auth.uid));
      // Only admins can delete users
      allow delete: if request.auth != null && getRole(request.auth.uid) == 'admin';
      
      // Allow staff to list all users
      allow list: if request.auth != null && isStaff(request.auth.uid);
    }
    
    // Cars Collection
    match /cars/{carId} {
      // Anyone can read approved car listings
      allow read: if resource.data.status == 'approved';
      // ANY authenticated user can create a car listing
      allow create: if request.auth != null;
      
      // Staff can update any field. Employee-A can only update listings they submitted.
      allow update: if request.auth != null && 
                    (isStaff(request.auth.uid) || 
                    (getRole(request.auth.uid) == 'employee-a' && resource.data.submittedBy == request.auth.uid));
                    
      // Only Admins/Managers can delete
      allow delete: if request.auth != null && isStaff(request.auth.uid);
      
      // Any employee can list all cars (for admin panels)
      allow list: if request.auth != null && isEmployee(request.auth.uid);
    }

    // Inquiries Collection
    match /inquiries/{inquiryId} {
        // Any authenticated user can create an inquiry
        allow create: if request.auth != null;
        
        // Only the assigned employee-b, or a manager/admin can read/update an inquiry
        allow read, update: if request.auth != null && 
                           (resource.data.assignedTo == request.auth.uid || isStaff(request.auth.uid));
                           
        // Only managers/admins can delete
        allow delete: if request.auth != null && isStaff(request.auth.uid);
        
        // Employee-B can list inquiries assigned to them
        // Admins/Managers can list all inquiries
        allow list: if request.auth != null && 
                    (getRole(request.auth.uid) == 'employee-b' || isStaff(request.auth.uid));
    }
    
    // Config Collection
    match /config/{docId} {
      // Publicly readable config (e.g., filter options)
      allow get;
      // Admins or content editors can write to config
      allow write: if request.auth != null && (isStaff(request.auth.uid) || getRole(request.auth.uid) == 'employee-a');
    }
  }
}
